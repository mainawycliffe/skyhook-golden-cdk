// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`creates resources matching the snapshot 1`] = `
{
  "Resources": {
    "testFunctionDataSource4C03DC5E": {
      "Properties": {
        "ApiId": "testID",
        "Description": "Data source for field booking on type Query.",
        "LambdaConfig": {
          "LambdaFunctionArn": {
            "Fn::GetAtt": [
              "testFunctionLambda78269C17",
              "Arn",
            ],
          },
        },
        "Name": "testFunctionDataSource",
        "ServiceRoleArn": {
          "Fn::GetAtt": [
            "testFunctionDataSourceServiceRole2206622A",
            "Arn",
          ],
        },
        "Type": "AWS_LAMBDA",
      },
      "Type": "AWS::AppSync::DataSource",
    },
    "testFunctionDataSourceServiceRole2206622A": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "appsync.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "testFunctionDataSourceServiceRoleDefaultPolicy585B338D": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "testFunctionLambda78269C17",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "testFunctionLambda78269C17",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "testFunctionDataSourceServiceRoleDefaultPolicy585B338D",
        "Roles": [
          {
            "Ref": "testFunctionDataSourceServiceRole2206622A",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "testFunctionLambda78269C17": {
      "DependsOn": [
        "testFunctionLambdaServiceRoleF9778236",
      ],
      "Properties": {
        "Code": {
          "S3Bucket": "cdk-lambda-nodejs-mock-fake-bucket",
          "S3Key": "cdk-lambda-nodejs-mock-fake-lambda.ts",
        },
        "Description": "Appsync Resolver for field booking on type Query.",
        "MemorySize": 1024,
        "Role": {
          "Fn::GetAtt": [
            "testFunctionLambdaServiceRoleF9778236",
            "Arn",
          ],
        },
        "Runtime": "nodejs20.x",
      },
      "Type": "AWS::Lambda::Function",
    },
    "testFunctionLambdaServiceRoleF9778236": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "testFunctionResolver84C7D9B2": {
      "DependsOn": [
        "testFunctionDataSource4C03DC5E",
      ],
      "Properties": {
        "ApiId": "testID",
        "DataSourceName": "testFunctionDataSource",
        "FieldName": "booking",
        "Kind": "UNIT",
        "TypeName": "Query",
      },
      "Type": "AWS::AppSync::Resolver",
    },
  },
}
`;
